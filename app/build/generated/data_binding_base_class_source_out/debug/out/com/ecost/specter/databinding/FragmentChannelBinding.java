// Generated by view binder compiler. Do not edit!
package com.ecost.specter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecost.specter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChannelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView buttonClose;

  @NonNull
  public final ImageView buttonEnter;

  @NonNull
  public final Button buttonSubscribe;

  @NonNull
  public final LinearLayout channelHead;

  @NonNull
  public final View divider;

  @NonNull
  public final TextView editPost;

  @NonNull
  public final EditText inputPost;

  @NonNull
  public final TextView numberSubscribers;

  @NonNull
  public final RecyclerView postRec;

  @NonNull
  public final TextView titleChannel;

  @NonNull
  public final LinearLayout toolsMenu;

  private FragmentChannelBinding(@NonNull LinearLayout rootView, @NonNull ImageView buttonClose,
      @NonNull ImageView buttonEnter, @NonNull Button buttonSubscribe,
      @NonNull LinearLayout channelHead, @NonNull View divider, @NonNull TextView editPost,
      @NonNull EditText inputPost, @NonNull TextView numberSubscribers,
      @NonNull RecyclerView postRec, @NonNull TextView titleChannel,
      @NonNull LinearLayout toolsMenu) {
    this.rootView = rootView;
    this.buttonClose = buttonClose;
    this.buttonEnter = buttonEnter;
    this.buttonSubscribe = buttonSubscribe;
    this.channelHead = channelHead;
    this.divider = divider;
    this.editPost = editPost;
    this.inputPost = inputPost;
    this.numberSubscribers = numberSubscribers;
    this.postRec = postRec;
    this.titleChannel = titleChannel;
    this.toolsMenu = toolsMenu;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChannelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChannelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_channel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChannelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_close;
      ImageView buttonClose = ViewBindings.findChildViewById(rootView, id);
      if (buttonClose == null) {
        break missingId;
      }

      id = R.id.button_enter;
      ImageView buttonEnter = ViewBindings.findChildViewById(rootView, id);
      if (buttonEnter == null) {
        break missingId;
      }

      id = R.id.button_subscribe;
      Button buttonSubscribe = ViewBindings.findChildViewById(rootView, id);
      if (buttonSubscribe == null) {
        break missingId;
      }

      id = R.id.channel_head;
      LinearLayout channelHead = ViewBindings.findChildViewById(rootView, id);
      if (channelHead == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.edit_post;
      TextView editPost = ViewBindings.findChildViewById(rootView, id);
      if (editPost == null) {
        break missingId;
      }

      id = R.id.input_post;
      EditText inputPost = ViewBindings.findChildViewById(rootView, id);
      if (inputPost == null) {
        break missingId;
      }

      id = R.id.number_subscribers;
      TextView numberSubscribers = ViewBindings.findChildViewById(rootView, id);
      if (numberSubscribers == null) {
        break missingId;
      }

      id = R.id.post_rec;
      RecyclerView postRec = ViewBindings.findChildViewById(rootView, id);
      if (postRec == null) {
        break missingId;
      }

      id = R.id.title_channel;
      TextView titleChannel = ViewBindings.findChildViewById(rootView, id);
      if (titleChannel == null) {
        break missingId;
      }

      id = R.id.tools_menu;
      LinearLayout toolsMenu = ViewBindings.findChildViewById(rootView, id);
      if (toolsMenu == null) {
        break missingId;
      }

      return new FragmentChannelBinding((LinearLayout) rootView, buttonClose, buttonEnter,
          buttonSubscribe, channelHead, divider, editPost, inputPost, numberSubscribers, postRec,
          titleChannel, toolsMenu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
