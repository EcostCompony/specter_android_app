// Generated by view binder compiler. Do not edit!
package com.ecost.specter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecost.specter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSignInBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View buttonHidePassword;

  @NonNull
  public final Button buttonPasswordReset;

  @NonNull
  public final Button buttonSignIn;

  @NonNull
  public final Button buttonSignUp;

  @NonNull
  public final FrameLayout frameInputPassword;

  @NonNull
  public final EditText inputPassword;

  @NonNull
  public final EditText inputPhone;

  private FragmentSignInBinding(@NonNull LinearLayout rootView, @NonNull View buttonHidePassword,
      @NonNull Button buttonPasswordReset, @NonNull Button buttonSignIn,
      @NonNull Button buttonSignUp, @NonNull FrameLayout frameInputPassword,
      @NonNull EditText inputPassword, @NonNull EditText inputPhone) {
    this.rootView = rootView;
    this.buttonHidePassword = buttonHidePassword;
    this.buttonPasswordReset = buttonPasswordReset;
    this.buttonSignIn = buttonSignIn;
    this.buttonSignUp = buttonSignUp;
    this.frameInputPassword = frameInputPassword;
    this.inputPassword = inputPassword;
    this.inputPhone = inputPhone;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_hide_password;
      View buttonHidePassword = ViewBindings.findChildViewById(rootView, id);
      if (buttonHidePassword == null) {
        break missingId;
      }

      id = R.id.button_password_reset;
      Button buttonPasswordReset = ViewBindings.findChildViewById(rootView, id);
      if (buttonPasswordReset == null) {
        break missingId;
      }

      id = R.id.button_sign_in;
      Button buttonSignIn = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignIn == null) {
        break missingId;
      }

      id = R.id.button_sign_up;
      Button buttonSignUp = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignUp == null) {
        break missingId;
      }

      id = R.id.frame_input_password;
      FrameLayout frameInputPassword = ViewBindings.findChildViewById(rootView, id);
      if (frameInputPassword == null) {
        break missingId;
      }

      id = R.id.input_password;
      EditText inputPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.input_phone;
      EditText inputPhone = ViewBindings.findChildViewById(rootView, id);
      if (inputPhone == null) {
        break missingId;
      }

      return new FragmentSignInBinding((LinearLayout) rootView, buttonHidePassword,
          buttonPasswordReset, buttonSignIn, buttonSignUp, frameInputPassword, inputPassword,
          inputPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
