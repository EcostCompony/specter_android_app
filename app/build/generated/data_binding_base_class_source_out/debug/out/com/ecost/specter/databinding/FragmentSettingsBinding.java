// Generated by view binder compiler. Do not edit!
package com.ecost.specter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecost.specter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonChapterChannels;

  @NonNull
  public final CardView buttonClose;

  @NonNull
  public final ImageButton buttonSaveName;

  @NonNull
  public final ImageButton buttonSaveShortLink;

  @NonNull
  public final Button buttonSignOut;

  @NonNull
  public final EditText inputShortLink;

  @NonNull
  public final EditText inputTitle;

  private FragmentSettingsBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonChapterChannels, @NonNull CardView buttonClose,
      @NonNull ImageButton buttonSaveName, @NonNull ImageButton buttonSaveShortLink,
      @NonNull Button buttonSignOut, @NonNull EditText inputShortLink,
      @NonNull EditText inputTitle) {
    this.rootView = rootView;
    this.buttonChapterChannels = buttonChapterChannels;
    this.buttonClose = buttonClose;
    this.buttonSaveName = buttonSaveName;
    this.buttonSaveShortLink = buttonSaveShortLink;
    this.buttonSignOut = buttonSignOut;
    this.inputShortLink = inputShortLink;
    this.inputTitle = inputTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_chapter_channels;
      Button buttonChapterChannels = ViewBindings.findChildViewById(rootView, id);
      if (buttonChapterChannels == null) {
        break missingId;
      }

      id = R.id.button_close;
      CardView buttonClose = ViewBindings.findChildViewById(rootView, id);
      if (buttonClose == null) {
        break missingId;
      }

      id = R.id.button_save_name;
      ImageButton buttonSaveName = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveName == null) {
        break missingId;
      }

      id = R.id.button_save_short_link;
      ImageButton buttonSaveShortLink = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveShortLink == null) {
        break missingId;
      }

      id = R.id.button_sign_out;
      Button buttonSignOut = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignOut == null) {
        break missingId;
      }

      id = R.id.input_short_link;
      EditText inputShortLink = ViewBindings.findChildViewById(rootView, id);
      if (inputShortLink == null) {
        break missingId;
      }

      id = R.id.input_title;
      EditText inputTitle = ViewBindings.findChildViewById(rootView, id);
      if (inputTitle == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((LinearLayout) rootView, buttonChapterChannels,
          buttonClose, buttonSaveName, buttonSaveShortLink, buttonSignOut, inputShortLink,
          inputTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
