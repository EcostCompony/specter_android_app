// Generated by view binder compiler. Do not edit!
package com.ecost.specter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecost.specter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreateChannelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView buttonClose;

  @NonNull
  public final Button buttonCreateChannel;

  @NonNull
  public final CardView channelPhoto;

  @NonNull
  public final ImageView imageChannelPhoto;

  @NonNull
  public final EditText inputShortLink;

  @NonNull
  public final EditText inputTitle;

  private FragmentCreateChannelBinding(@NonNull LinearLayout rootView,
      @NonNull CardView buttonClose, @NonNull Button buttonCreateChannel,
      @NonNull CardView channelPhoto, @NonNull ImageView imageChannelPhoto,
      @NonNull EditText inputShortLink, @NonNull EditText inputTitle) {
    this.rootView = rootView;
    this.buttonClose = buttonClose;
    this.buttonCreateChannel = buttonCreateChannel;
    this.channelPhoto = channelPhoto;
    this.imageChannelPhoto = imageChannelPhoto;
    this.inputShortLink = inputShortLink;
    this.inputTitle = inputTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreateChannelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreateChannelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create_channel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreateChannelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_close;
      CardView buttonClose = ViewBindings.findChildViewById(rootView, id);
      if (buttonClose == null) {
        break missingId;
      }

      id = R.id.button_create_channel;
      Button buttonCreateChannel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCreateChannel == null) {
        break missingId;
      }

      id = R.id.channel_photo;
      CardView channelPhoto = ViewBindings.findChildViewById(rootView, id);
      if (channelPhoto == null) {
        break missingId;
      }

      id = R.id.image_channel_photo;
      ImageView imageChannelPhoto = ViewBindings.findChildViewById(rootView, id);
      if (imageChannelPhoto == null) {
        break missingId;
      }

      id = R.id.input_short_link;
      EditText inputShortLink = ViewBindings.findChildViewById(rootView, id);
      if (inputShortLink == null) {
        break missingId;
      }

      id = R.id.input_title;
      EditText inputTitle = ViewBindings.findChildViewById(rootView, id);
      if (inputTitle == null) {
        break missingId;
      }

      return new FragmentCreateChannelBinding((LinearLayout) rootView, buttonClose,
          buttonCreateChannel, channelPhoto, imageChannelPhoto, inputShortLink, inputTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
